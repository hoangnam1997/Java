/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BUS.busChucVu;
import BUS.busHopDong;
import BUS.busNhanVien;
import BUS.busPhongBan;
import BUS.busTaiKhoan;
import DTO.dtoChamLuongNhanVien;
import DTO.dtoChucVu;
import DTO.dtoHopDong;
import DTO.dtoNhanVien;
import DTO.dtoPhongBan;
import DTO.dtoTaiKhoan;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NT
 */
public class jfrmNhanVien extends javax.swing.JInternalFrame {

    private static ArrayList<dtoHopDong> listHopDong;
    private static ArrayList<dtoChucVu> listChucVu;
    private static ArrayList<dtoPhongBan> listPhongban;

    /**
     * Creates new form jfrmNhanVien
     */
    public jfrmNhanVien() {
        initComponents();

        LoadDanhSachNhanVien();
        loadPhongBan();
        loadbinDing();
    }
//LoadbinDing

    void loadbinDing() {
        jtbNhanVien.getSelectionModel().addListSelectionListener((e) -> {
            if (jtbNhanVien.getSelectedRow() >= 0) {
                jtxtMatKhau.setText("");
                Object MANV = jtbNhanVien.getValueAt(jtbNhanVien.getSelectedRow(), 0);
                Object TenNV = jtbNhanVien.getValueAt(jtbNhanVien.getSelectedRow(), 1);
                Object GioiTinh = jtbNhanVien.getValueAt(jtbNhanVien.getSelectedRow(), 2);
                Object SDT = jtbNhanVien.getValueAt(jtbNhanVien.getSelectedRow(), 3);
                Object DiaChi = jtbNhanVien.getValueAt(jtbNhanVien.getSelectedRow(), 4);
                Object TaiKhoan = jtbNhanVien.getValueAt(jtbNhanVien.getSelectedRow(), 5);
                Object MAHD = jtbNhanVien.getValueAt(jtbNhanVien.getSelectedRow(), 6);
                if (MANV != null) {
                    jtxtMaNV.setText(MANV.toString());
                }
                if (TenNV != null) {
                    jtxtHoTen.setText(TenNV.toString());
                }
                if (GioiTinh != null) {
                    switch (GioiTinh.toString()) {
                        case "0":
                            jrdNu.setSelected(true);
                            break;
                        default:
                            jrdNam.setSelected(true);
                            break;
                    }
                }
                if (SDT != null) {
                    jtxtSDT.setText(SDT.toString());
                }
                if (DiaChi != null) {
                    jtxtDiaChi.setText(DiaChi.toString());
                }
                if (TaiKhoan != null) {
                    jtxtTaiKhoan.setText(TaiKhoan.toString());
                }
                if (MAHD != null) {
                    dtoHopDong hopDong = busHopDong.getInstance().getHopDong((int) MAHD);
                    dtoChucVu chucVu = busChucVu.getInstance().getChucVu(hopDong.getMACV());
                    for (int i = 0; i < listPhongban.size(); i++) {
                        if (listPhongban.get(i).getMAPB() == chucVu.getMAPB()) {
                            jcbPhongban.setSelectedIndex(i);
                            break;
                        }
                    }
                    for (int i = 0; i < listChucVu.size(); i++) {
                        if (listChucVu.get(i).getMACV()== chucVu.getMACV()) {
                            jcbChucVu.setSelectedIndex(i);
                            break;
                        }
                    }
                    for (int i = 0; i < listHopDong.size(); i++) {
                        if (listHopDong.get(i).getMAHD()== (int) MAHD) {
                            jcbMaHopDong.setSelectedIndex(i);
                            break;
                        }
                    }
                }
                if (TaiKhoan != null) {
                    dtoTaiKhoan taiKhoan = busTaiKhoan.getInstance().layThongTinTaiKhoan(TaiKhoan.toString());
                    if (taiKhoan != null) {
                        jtxtCapDo.setText(String.valueOf(taiKhoan.getLV()));
                    }
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroupGioiTinh = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        jtxtXem = new javax.swing.JTextField();
        jbtnSearch = new javax.swing.JButton();
        jtxtSDT = new javax.swing.JTextField();
        jtxtDiaChi = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtxtHoTen = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jrdNam = new javax.swing.JRadioButton();
        jrdNu = new javax.swing.JRadioButton();
        jcbMaHopDong = new javax.swing.JComboBox<>();
        jtxtMaNV = new javax.swing.JTextField();
        jtxtCapDo = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jbtnXoa = new javax.swing.JButton();
        jbtnCapNhat = new javax.swing.JButton();
        jbtnThem = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jtxtTaiKhoan = new javax.swing.JTextField();
        jtxtMatKhau = new javax.swing.JPasswordField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtbNhanVien = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jcbPhongban = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jcbChucVu = new javax.swing.JComboBox<>();
        jtxtPhongBan = new javax.swing.JTextField();
        jtxtChucVu = new javax.swing.JTextField();
        jtxtHopDong = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setTitle("Quản lý nhân viên");
        setAutoscrolls(true);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Tên Nhân viên");

        jtxtXem.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtxtXem.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jbtnSearch.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jbtnSearch.setText("Xem");
        jbtnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSearchActionPerformed(evt);
            }
        });

        jtxtSDT.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jtxtDiaChi.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Giới tính");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Số điện thoại:");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setText("Mã nhân viên:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Địa chỉ:");

        jtxtHoTen.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("Mật khẩu:");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setText("Họ tên:");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel8.setText("Mã hợp đồng:");

        btnGroupGioiTinh.add(jrdNam);
        jrdNam.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jrdNam.setSelected(true);
        jrdNam.setText("Nam");

        btnGroupGioiTinh.add(jrdNu);
        jrdNu.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jrdNu.setText("Nữ");

        jcbMaHopDong.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jcbMaHopDong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbMaHopDongActionPerformed(evt);
            }
        });

        jtxtMaNV.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtxtMaNV.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jtxtMaNV.setNextFocusableComponent(jtxtHoTen);
        jtxtMaNV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtMaNVKeyTyped(evt);
            }
        });

        jtxtCapDo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtxtCapDo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtCapDoKeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel9.setText("Cấp độ:");

        jbtnXoa.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jbtnXoa.setText("Xóa");
        jbtnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnXoaActionPerformed(evt);
            }
        });

        jbtnCapNhat.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jbtnCapNhat.setText("Cập nhật");
        jbtnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCapNhatActionPerformed(evt);
            }
        });

        jbtnThem.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jbtnThem.setText("Thêm");
        jbtnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnThemActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel10.setText("Tai khoản:");

        jtxtTaiKhoan.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jtxtMatKhau.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtxtMatKhau.setToolTipText("Để trống nếu không thay đổi");

        jtbNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã nhân viên", "Họ tên", "Giới tính", "SDT", "DiaChi", "TaiKhoan", "MatKhau", "CapDo", "MaHD"
            }
        ));
        jtbNhanVien.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(jtbNhanVien);
        if (jtbNhanVien.getColumnModel().getColumnCount() > 0) {
            jtbNhanVien.getColumnModel().getColumn(2).setMinWidth(0);
            jtbNhanVien.getColumnModel().getColumn(2).setPreferredWidth(0);
            jtbNhanVien.getColumnModel().getColumn(2).setMaxWidth(0);
            jtbNhanVien.getColumnModel().getColumn(4).setMinWidth(0);
            jtbNhanVien.getColumnModel().getColumn(4).setPreferredWidth(0);
            jtbNhanVien.getColumnModel().getColumn(4).setMaxWidth(0);
            jtbNhanVien.getColumnModel().getColumn(5).setMinWidth(0);
            jtbNhanVien.getColumnModel().getColumn(5).setPreferredWidth(0);
            jtbNhanVien.getColumnModel().getColumn(5).setMaxWidth(0);
            jtbNhanVien.getColumnModel().getColumn(6).setMinWidth(0);
            jtbNhanVien.getColumnModel().getColumn(6).setPreferredWidth(0);
            jtbNhanVien.getColumnModel().getColumn(6).setMaxWidth(0);
            jtbNhanVien.getColumnModel().getColumn(7).setMinWidth(0);
            jtbNhanVien.getColumnModel().getColumn(7).setPreferredWidth(0);
            jtbNhanVien.getColumnModel().getColumn(7).setMaxWidth(0);
            jtbNhanVien.getColumnModel().getColumn(8).setMinWidth(0);
            jtbNhanVien.getColumnModel().getColumn(8).setPreferredWidth(0);
            jtbNhanVien.getColumnModel().getColumn(8).setMaxWidth(0);
        }

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel11.setText("Phòng ban:");
        jLabel11.setToolTipText("");

        jcbPhongban.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jcbPhongban.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbPhongbanActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel12.setText("Chức vụ:");

        jcbChucVu.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jcbChucVu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbChucVuActionPerformed(evt);
            }
        });

        jtxtPhongBan.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtxtPhongBan.setEnabled(false);

        jtxtChucVu.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtxtChucVu.setEnabled(false);

        jtxtHopDong.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtxtHopDong.setEnabled(false);

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel13.setText("Mã:");

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel14.setText("Mã:");

        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel15.setText("Lương:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2)
                .addGap(42, 42, 42)
                .addComponent(jtxtXem, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnSearch)
                .addGap(42, 42, 42))
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)))
                            .addGap(39, 39, 39))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(jLabel1))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jtxtHoTen)
                        .addComponent(jtxtTaiKhoan, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jtxtMatKhau, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jcbPhongban, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel13)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtxtPhongBan, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jtxtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jtxtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jtxtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jtxtCapDo, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jcbChucVu, 0, 114, Short.MAX_VALUE)
                                .addComponent(jcbMaHopDong, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel14)
                                .addComponent(jLabel15))
                            .addGap(9, 9, 9)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jtxtChucVu)
                                .addComponent(jtxtHopDong)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jbtnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jbtnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jbtnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jrdNam)
                        .addGap(28, 28, 28)
                        .addComponent(jrdNu)))
                .addGap(90, 90, 90))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtXem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnSearch)
                    .addComponent(jLabel2))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jtxtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtxtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jrdNam)
                            .addComponent(jrdNu)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtxtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtxtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jtxtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtxtCapDo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jcbPhongban, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(jtxtPhongBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(jcbChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jtxtChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jcbMaHopDong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtxtHopDong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbtnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbtnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbtnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtxtMaNVKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtMaNVKeyTyped
        char enter = evt.getKeyChar();
        if (!(Character.isDigit(enter))) {
            evt.consume();
        }
        if (jtxtMaNV.getText().length() >= 4) {
            evt.consume();
        }
    }//GEN-LAST:event_jtxtMaNVKeyTyped
//khong cho nhập quá số luog
    private void jtxtCapDoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtCapDoKeyTyped
        char enter = evt.getKeyChar();
        if (!(Character.isDigit(enter))) {
            evt.consume();
        }
        if (jtxtCapDo.getText().length() >= 1) {
            evt.consume();
        }
    }//GEN-LAST:event_jtxtCapDoKeyTyped

//Thực hiện xóa nhân viên
    private void jbtnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnXoaActionPerformed
        if (jtxtMaNV.getText().length() <= 0) {
            return;
        }
        dtoNhanVien nv = busNhanVien.getInstance().getNhanVientheoMANV(Integer.parseInt(jtxtMaNV.getText()));
        if (nv == null) {
            JOptionPane.showConfirmDialog(null, "Không tìm thấy nhân viên", "Thông báo", -1, 2);
            return;
        }
        if (!busNhanVien.getInstance().deleteNhanVien(nv.getMANV())) {
            JOptionPane.showConfirmDialog(null, "Vui lòng thực hiện lại", "Thông báo", -1, 2);
            return;
        } else {
            JOptionPane.showConfirmDialog(null, "Xóa thành công!", "Thông báo", -1, 1);
        }
        jbtnSearch.doClick();

    }//GEN-LAST:event_jbtnXoaActionPerformed
//thực hiện cập nhật thông tin nhân viên
    private void jbtnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCapNhatActionPerformed
        if (jtxtMaNV.getText().length() <= 0) {
            return;
        }
        dtoNhanVien nv = busNhanVien.getInstance().getNhanVientheoMANV(Integer.parseInt(jtxtMaNV.getText()));
        if (nv == null) {
            JOptionPane.showConfirmDialog(null, "Không tìm thấy nhân viên", "Thông báo", -1, 2);
            return;
        }
        if (jtxtMatKhau.getText().length() > 0) {
            if ((!nv.getTAIKHOAN().equals(jtxtTaiKhoan.getText())) || busTaiKhoan.getInstance().layThongTinTaiKhoan(jtxtTaiKhoan.getText()) == null) {
                JOptionPane.showConfirmDialog(null, "Vui lòng nhập lại tài khoản!", "Thông báo", -1, 2);
                return;
            }
            dtoTaiKhoan TaiKhoan = new dtoTaiKhoan();
            TaiKhoan.setTAIKHOAN(jtxtTaiKhoan.getText());
            TaiKhoan.setMATKHAU(jtxtMatKhau.getText());
            TaiKhoan.setLV(Integer.parseInt(jtxtCapDo.getText()));
            if (!busTaiKhoan.getInstance().updateTaiKhoan(TaiKhoan.getTAIKHOAN(), TaiKhoan.getMATKHAU(), TaiKhoan.getLV())) {
                JOptionPane.showConfirmDialog(null, "Vui lòng thực hiện lại!", "Thông báo", -1, 2);
                return;
            }
        }
        dtoNhanVien nhanVien = new dtoNhanVien();
        nhanVien.setMANV(Integer.parseInt(jtxtMaNV.getText()));
        nhanVien.setTENNV(jtxtHoTen.getText());
        nhanVien.setDiaChi(jtxtDiaChi.getText());
        nhanVien.setGioiTinh(jrdNam.isSelected() == true ? 1 : 0);
        nhanVien.setTAIKHOAN(nv.getTAIKHOAN());
        nhanVien.setSDT(jtxtSDT.getText());
        nhanVien.setMAHD(Integer.parseInt(jcbMaHopDong.getSelectedItem().toString()));
        if (!busNhanVien.getInstance().updateNhanVien(nhanVien.getMANV(), nhanVien.getTENNV(),
                nhanVien.getGioiTinh(), nhanVien.getSDT(), nhanVien.getDiaChi(), nhanVien.getTAIKHOAN(), nhanVien.getMAHD())) {
            JOptionPane.showConfirmDialog(null, "Vui lòng thực hiện lại!", "Thông báo", -1, 2);
            return;
        } else {
            JOptionPane.showConfirmDialog(null, "Cập nhật thành công!", "Thông báo", -1, 1);
        }
        jbtnSearch.doClick();
    }//GEN-LAST:event_jbtnCapNhatActionPerformed
//Thêm nhân viên
    private void jbtnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnThemActionPerformed
        if (jtxtMaNV.getText().length() <= 0) {
            JOptionPane.showConfirmDialog(null, "Vui lòng nhập mã nhân viên!", "Thông báo", -1, 2);
            return;
        }
        if (jtxtTaiKhoan.getText().length() <= 0 || jtxtMatKhau.getText().length() <= 0 || jtxtCapDo.getText().length() <= 0) {
            JOptionPane.showConfirmDialog(null, "Vui lòng nhập thông tin tài khoản!", "Thông báo", -1, 2);
            return;
        }
        dtoTaiKhoan TaiKhoan = new dtoTaiKhoan();
        TaiKhoan.setTAIKHOAN(jtxtTaiKhoan.getText());
        TaiKhoan.setMATKHAU(jtxtMatKhau.getText());
        TaiKhoan.setLV(Integer.parseInt(jtxtCapDo.getText()));
        if (!busTaiKhoan.getInstance().insertTaiKhoan(TaiKhoan.getTAIKHOAN(), TaiKhoan.getMATKHAU(), TaiKhoan.getLV())) {
            JOptionPane.showConfirmDialog(null, "Vui lòng thực hiện lại!", "Thông báo", -1, 2);
            return;
        }
        dtoNhanVien nhanVien = new dtoNhanVien();
        nhanVien.setMANV(Integer.parseInt(jtxtMaNV.getText()));
        nhanVien.setTENNV(jtxtHoTen.getText());
        nhanVien.setDiaChi(jtxtDiaChi.getText());
        nhanVien.setGioiTinh(jrdNam.isSelected() == true ? 1 : 0);
        nhanVien.setTAIKHOAN(jtxtTaiKhoan.getText());
        nhanVien.setSDT(jtxtSDT.getText());
        nhanVien.setMAHD(Integer.parseInt(jcbMaHopDong.getSelectedItem().toString()));
        if (!busNhanVien.getInstance().insertNhanVien(nhanVien.getMANV(), nhanVien.getTENNV(),
                nhanVien.getGioiTinh(), nhanVien.getSDT(), nhanVien.getDiaChi(), nhanVien.getTAIKHOAN(), nhanVien.getMAHD())) {
            JOptionPane.showConfirmDialog(null, "Vui lòng thực hiện lại!", "Thông báo", -1, 2);
            busTaiKhoan.getInstance().deleteTaiKhoan(TaiKhoan.getTAIKHOAN());
            return;
        } else {
            JOptionPane.showConfirmDialog(null, "Thêm thành công!", "Thông báo", -1, 1);
            dtoChamLuongNhanVien IP= new dtoChamLuongNhanVien(0, Integer.parseInt(jtxtMaNV.getText()), new Date(), new Date(), 0);
            DAO.daoChamLuongNhanVien.getInstance().ChamLuongNhanVien(IP);
        }
        jbtnSearch.doClick();
    }//GEN-LAST:event_jbtnThemActionPerformed

    //Thực hiện lấy thông tin nhân viên
    private void jbtnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSearchActionPerformed
        LoadDanhSachNhanVien();
    }//GEN-LAST:event_jbtnSearchActionPerformed

//Thực hiện load tất cả các hợp đồng
    void loadHopDong() {
        jcbMaHopDong.removeAllItems();
        if (jcbChucVu.getSelectedItem() == null) {
            return;
        }
        int macv = Integer.parseInt((String) jtxtChucVu.getText());
        listHopDong = busHopDong.getInstance().getDanhSachHopDong(macv);
        for (dtoHopDong item : listHopDong) {
            jcbMaHopDong.addItem(String.valueOf(item.getMAHD()));
        }
    }
//load chuc vu

    void loadChucVu() {
        jcbChucVu.removeAllItems();
        if (jcbPhongban.getSelectedItem().toString().equals("")) {
            return;
        }
        int mapb = Integer.parseInt(jtxtPhongBan.getText().toString());
        listChucVu = busChucVu.getInstance().getDanhSachChucVu(mapb);
        for (dtoChucVu item : listChucVu) {
            jcbChucVu.addItem(String.valueOf(item.getTenChucVu()));
        }
    }//load phong ban

    void loadPhongBan() {
        jcbPhongban.removeAllItems();
        listPhongban = busPhongBan.getInstance().getDanhSachPhongBan();
        for (dtoPhongBan item : listPhongban) {
            jcbPhongban.addItem(String.valueOf(item.getTenPB()));
        }
    }
    private void jcbPhongbanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbPhongbanActionPerformed
        int index = jcbPhongban.getSelectedIndex();
        if (index < 0) {
            return;
        }
        jtxtPhongBan.setText(String.valueOf(listPhongban.get(index).getMAPB()));
        loadChucVu();
    }//GEN-LAST:event_jcbPhongbanActionPerformed

    private void jcbChucVuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbChucVuActionPerformed

        int index = jcbChucVu.getSelectedIndex();
        if (index < 0) {
            return;
        }
        jtxtChucVu.setText(String.valueOf(listChucVu.get(index).getMACV()));
        loadHopDong();
    }//GEN-LAST:event_jcbChucVuActionPerformed

    private void jcbMaHopDongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbMaHopDongActionPerformed
        int index = jcbMaHopDong.getSelectedIndex();
        if (index < 0) {
            return;
        }
        jtxtHopDong.setText(String.valueOf(listHopDong.get(index).getTIENLUONG()));
    }//GEN-LAST:event_jcbMaHopDongActionPerformed
    //load danh sach nhan vien

    void LoadDanhSachNhanVien() {
        ArrayList<dtoNhanVien> list = busNhanVien.getInstance().getDanhSachNhanVien(jtxtXem.getText());
        DefaultTableModel model = (DefaultTableModel) jtbNhanVien.getModel();
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }
        for (dtoNhanVien item : list) {
            model.addRow(new Object[]{item.getMANV(), item.getTENNV(), item.getGioiTinh(), item.getSDT(), item.getDiaChi(), item.getTAIKHOAN(), item.getMAHD()});
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btnGroupGioiTinh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtnCapNhat;
    private javax.swing.JButton jbtnSearch;
    private javax.swing.JButton jbtnThem;
    private javax.swing.JButton jbtnXoa;
    private javax.swing.JComboBox<String> jcbChucVu;
    private javax.swing.JComboBox<String> jcbMaHopDong;
    private javax.swing.JComboBox<String> jcbPhongban;
    private javax.swing.JRadioButton jrdNam;
    private javax.swing.JRadioButton jrdNu;
    private javax.swing.JTable jtbNhanVien;
    private javax.swing.JTextField jtxtCapDo;
    private javax.swing.JTextField jtxtChucVu;
    private javax.swing.JTextField jtxtDiaChi;
    private javax.swing.JTextField jtxtHoTen;
    private javax.swing.JTextField jtxtHopDong;
    private javax.swing.JTextField jtxtMaNV;
    private javax.swing.JPasswordField jtxtMatKhau;
    private javax.swing.JTextField jtxtPhongBan;
    private javax.swing.JTextField jtxtSDT;
    private javax.swing.JTextField jtxtTaiKhoan;
    private javax.swing.JTextField jtxtXem;
    // End of variables declaration//GEN-END:variables

}
